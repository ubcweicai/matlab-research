%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Microsoft Windows 8.1 Enterprise.
%%Title: C:\Users\Admin\Dropbox\Code\Matlab\J-ICC\figures\network_terminal.eps
%%CreationDate: 07/08/2014  23:04:28
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    63   193   546   598
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    63   193   546   598
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0756 7176 csm

    0     0  5804  4851 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5805 4852 rf
6 w
0 3953 4498 0 0 -3953 755 4317 4 MP
PP
-4498 0 0 3953 4498 0 0 -3953 755 4317 5 MP stroke
4 w
DO
SO
6 w
0 sg
 755  364 mt 5253  364 L
 755 4317 mt 5253 4317 L
5253 4317 mt 5253  364 L
 755 4317 mt  755  364 L
 755 4317 mt 5253 4317 L
 755 4317 mt  755  364 L
 755 4317 mt  755 4272 L
 755  364 mt  755  408 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 689 4462 mt 
(40) s
1504 4317 mt 1504 4272 L
1504  364 mt 1504  408 L
1438 4462 mt 
(60) s
2254 4317 mt 2254 4272 L
2254  364 mt 2254  408 L
2188 4462 mt 
(80) s
3004 4317 mt 3004 4272 L
3004  364 mt 3004  408 L
2904 4462 mt 
(100) s
3753 4317 mt 3753 4272 L
3753  364 mt 3753  408 L
3653 4462 mt 
(120) s
4503 4317 mt 4503 4272 L
4503  364 mt 4503  408 L
4403 4462 mt 
(140) s
5253 4317 mt 5253 4272 L
5253  364 mt 5253  408 L
5153 4462 mt 
(160) s
 755 4317 mt  799 4317 L
5253 4317 mt 5208 4317 L
 654 4361 mt 
(0) s
 755 3877 mt  799 3877 L
5253 3877 mt 5208 3877 L
 587 3921 mt 
(10) s
 755 3438 mt  799 3438 L
5253 3438 mt 5208 3438 L
 587 3482 mt 
(20) s
 755 2999 mt  799 2999 L
5253 2999 mt 5208 2999 L
 587 3043 mt 
(30) s
 755 2560 mt  799 2560 L
5253 2560 mt 5208 2560 L
 587 2604 mt 
(40) s
 755 2120 mt  799 2120 L
5253 2120 mt 5208 2120 L
 587 2164 mt 
(50) s
 755 1681 mt  799 1681 L
5253 1681 mt 5208 1681 L
 587 1725 mt 
(60) s
 755 1242 mt  799 1242 L
5253 1242 mt 5208 1242 L
 587 1286 mt 
(70) s
 755  803 mt  799  803 L
5253  803 mt 5208  803 L
 587  847 mt 
(80) s
 755  364 mt  799  364 L
5253  364 mt 5208  364 L
 587  408 mt 
(90) s
 755  364 mt 5253  364 L
 755 4317 mt 5253 4317 L
5253 4317 mt 5253  364 L
 755 4317 mt  755  364 L
gs 755 364 4499 3954 rc
12 w
gs 933 572 4039 3668 rc
60 W
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
2182 753 PD
60 W
2416 1313 PD
60 W
1536 844 PD
60 W
1770 1404 PD
60 W
3046 996 PD
60 W
3280 1556 PD
60 W
2400 1087 PD
60 W
2633 1648 PD
60 W
3693 2088 PD
60 W
3927 2648 PD
60 W
2912 2177 PD
60 W
3146 2737 PD
60 W
4557 2331 PD
60 W
4790 2891 PD
60 W
3776 2420 PD
60 W
4009 2980 PD
60 W
2116 1021 PD
60 W
2350 1582 PD
60 W
1470 1113 PD
60 W
1703 1673 PD
60 W
2980 1265 PD
60 W
3214 1825 PD
60 W
2333 1356 PD
60 W
2567 1916 PD
60 W
3627 2356 PD
60 W
3861 2917 PD
60 W
2846 2446 PD
60 W
3080 3006 PD
60 W
4491 2600 PD
60 W
4724 3160 PD
60 W
3710 2689 PD
60 W
3943 3249 PD
60 W
2759 1316 PD
60 W
2714 1871 PD
60 W
2113 1407 PD
60 W
2067 1963 PD
60 W
3623 1559 PD
60 W
3577 2114 PD
60 W
2976 1650 PD
60 W
2931 2206 PD
60 W
3249 2633 PD
60 W
3203 3189 PD
60 W
2468 2722 PD
60 W
2422 3278 PD
60 W
4112 2876 PD
60 W
4067 3432 PD
60 W
3331 2966 PD
60 W
3286 3521 PD
60 W
2693 1584 PD
60 W
2648 2140 PD
60 W
2047 1676 PD
60 W
2001 2231 PD
60 W
3557 1828 PD
60 W
3511 2383 PD
60 W
2910 1919 PD
60 W
2865 2474 PD
60 W
3182 2902 PD
60 W
3137 3457 PD
60 W
2402 2991 PD
60 W
2356 3546 PD
60 W
4046 3145 PD
60 W
4001 3701 PD
60 W
3265 3234 PD
60 W
3220 3790 PD
60 W
1827 1022 PD
60 W
2061 1582 PD
60 W
1180 1113 PD
60 W
1414 1673 PD
60 W
2691 1265 PD
60 W
2924 1825 PD
60 W
2044 1356 PD
60 W
2278 1916 PD
60 W
3338 2356 PD
60 W
3571 2917 PD
60 W
2557 2446 PD
60 W
2790 3006 PD
60 W
4201 2600 PD
60 W
4435 3160 PD
60 W
3420 2689 PD
60 W
3654 3249 PD
60 W
1761 1290 PD
60 W
1994 1850 PD
60 W
1114 1381 PD
60 W
1348 1942 PD
60 W
2624 1533 PD
60 W
2858 2094 PD
60 W
1978 1625 PD
60 W
2212 2185 PD
60 W
3272 2625 PD
60 W
3505 3185 PD
60 W
2491 2714 PD
60 W
2724 3274 PD
60 W
4135 2868 PD
60 W
4369 3429 PD
60 W
3354 2957 PD
60 W
3588 3518 PD
60 W
2404 1584 PD
60 W
2358 2140 PD
60 W
1757 1676 PD
60 W
1712 2231 PD
60 W
3267 1828 PD
60 W
3222 2383 PD
60 W
2621 1919 PD
60 W
2575 2474 PD
60 W
2893 2902 PD
60 W
2848 3457 PD
60 W
2112 2991 PD
60 W
2067 3546 PD
60 W
3757 3145 PD
60 W
3711 3701 PD
60 W
2976 3234 PD
60 W
2931 3790 PD
60 W
2338 1853 PD
60 W
2292 2408 PD
60 W
1691 1944 PD
60 W
1646 2500 PD
60 W
3201 2096 PD
60 W
3156 2652 PD
60 W
2555 2188 PD
60 W
2509 2743 PD
60 W
2827 3171 PD
60 W
2782 3726 PD
60 W
2046 3260 PD
60 W
2001 3815 PD
60 W
3691 3414 PD
60 W
3645 3969 PD
60 W
2910 3503 PD
60 W
2864 4058 PD
gr

c8
gr

12 w
c8
0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 168 FMSR

2498 4640 mt 
(Network Cost) s
 495 2856 mt  -90 rotate
(Terminal Cost) s
90 rotate
1201  259 mt 
(Tradeoff between network cost and terminal cost) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 738 4360 mt 
( ) s
5237  406 mt 
( ) s
gs 755 364 4499 3954 rc
36 w
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
-15 -15 -15 -15 -15 -14 -15 -15 -15 -15 -15 -14 -15 -15 -15 -15 
-15 -14 -15 -15 -15 -14 -15 -14 -15 -15 -15 -14 -15 -14 -15 -14 
-15 -14 -15 -14 -15 -14 -15 -14 -15 -14 -15 -14 -15 -14 -16 -14 
-15 -13 -15 -14 -15 -14 -15 -13 -15 -14 -15 -13 -15 -13 -15 -14 
-15 -13 -15 -13 -15 -13 -15 -14 -15 -13 -15 -13 -15 -13 -15 -13 
-15 -12 -15 -13 -15 -13 -15 -13 -15 -12 -16 -13 -15 -13 -15 -12 
-15 -13 -15 -12 -15 -12 -15 -13 -15 -12 -15 -12 -15 -12 -15 -12 
-15 -12 -15 -12 -15 -12 -15 -12 -15 -12 -15 -12 -15 -12 -15 -11 
-15 -12 -15 -12 -15 -11 -15 -12 -16 -11 -15 -12 -15 -11 -15 -11 
-15 -11 -15 -12 -15 -11 -15 -11 -15 -11 -15 -11 -15 -11 -15 -11 
-15 -11 -15 -10 -15 -11 -15 -11 -15 -10 -15 -11 -15 -10 -15 -11 
-15 -10 -15 -11 -15 -10 -16 -10 -15 -11 -15 -10 -15 -10 -15 -10 
-15 -10 -15 -10 -15 -10 -15 -10 -15 -10 -15 -9 -15 -10 -15 -10 
-15 -9 -15 -10 -15 -9 -15 -10 -15 -9 -15 -10 -15 -9 -15 -9 
-15 -9 -15 -9 -16 -10 -15 -9 -15 -9 -15 -9 -15 -8 -15 -9 
-15 -9 -15 -9 -15 -9 -15 -8 -15 -9 -15 -8 -15 -9 -15 -8 
-15 -9 -15 -8 -15 -8 -15 -9 -15 -8 -15 -8 -15 -8 -15 -8 
-15 -8 -16 -8 -15 -8 -15 -8 -15 -7 -15 -8 -15 -8 -15 -7 
-15 -8 -15 -7 -15 -8 -15 -7 -15 -8 -15 -7 -15 -7 -15 -7 
-15 -8 -15 -7 -15 -7 -15 -7 -15 -7 -15 -7 -15 -7 -15 -6 
-16 -7 -15 -7 -15 -6 -15 -7 -15 -7 -15 -6 -15 -7 -15 -6 
-15 -6 -15 -7 -15 -6 -15 -6 -15 -6 -15 -6 -15 -6 -15 -6 
-15 -6 -15 -6 -15 -6 -15 -6 -15 -6 -15 -5 -15 -6 -16 -5 
-15 -6 -15 -5 -15 -6 -15 -5 -15 -6 -15 -5 -15 -5 -15 -5 
-15 -5 -15 -5 -15 -6 -15 -4 -15 -5 -15 -5 -15 -5 -15 -5 
-15 -5 -15 -4 -15 -5 -15 -4 -15 -5 -15 -4 -16 -5 -15 -4 
-15 -4 -15 -5 -15 -4 -15 -4 -15 -4 -15 -4 -15 -4 -15 -4 
-15 -4 -15 -4 -15 -4 -15 -4 -15 -3 -15 -4 -15 -3 -15 -4 
-15 -3 -15 -4 -15 -3 -15 -4 -15 -3 -16 -3 -15 -3 -15 -4 
-15 -3 -15 -3 -15 -3 -15 -3 -15 -2 -15 -3 -15 -3 -15 -3 
-15 -2 -15 -3 -15 -3 -15 -2 -15 -3 -15 -2 -15 -2 -15 -3 
-15 -2 -15 -2 -15 -2 -15 -3 -16 -2 -15 -2 -15 -2 -15 -2 
-15 -1 -15 -2 -15 -2 -15 -2 -15 -1 -15 -2 -15 -1 -15 -2 
-15 -1 -15 -2 -15 -1 -15 -1 -15 -2 -15 -1 -15 -1 -15 -1 
-15 -1 -15 -1 -15 -1 -16 -1 -15 -1 -15 -1 -15 0 -15 -1 
-15 -1 -15 0 -15 -1 -15 0 -15 -1 -15 0 -15 -1 -15 0 
-15 0 -15 0 -15 0 -15 0 -15 0 -15 0 -15 0 -15 0 
-15 0 -15 0 -16 0 5253 3069 300 MP stroke
6 w
gr

6 w
c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
