%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Microsoft Windows 8.1 Enterprise.
%%Title: C:\Users\Admin\Dropbox\Code\Matlab\J-ICC\figures\cloud_terminal.eps
%%CreationDate: 07/08/2014  23:06:32
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    63   193   546   598
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    63   193   546   598
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0756 7176 csm

    0     0  5804  4851 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5805 4852 rf
6 w
0 3953 4498 0 0 -3953 755 4317 4 MP
PP
-4498 0 0 3953 4498 0 0 -3953 755 4317 5 MP stroke
4 w
DO
SO
6 w
0 sg
 755  364 mt 5253  364 L
 755 4317 mt 5253 4317 L
5253 4317 mt 5253  364 L
 755 4317 mt  755  364 L
 755 4317 mt 5253 4317 L
 755 4317 mt  755  364 L
 755 4317 mt  755 4272 L
 755  364 mt  755  408 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 689 4462 mt 
(10) s
1317 4317 mt 1317 4272 L
1317  364 mt 1317  408 L
1251 4462 mt 
(20) s
1879 4317 mt 1879 4272 L
1879  364 mt 1879  408 L
1813 4462 mt 
(30) s
2441 4317 mt 2441 4272 L
2441  364 mt 2441  408 L
2375 4462 mt 
(40) s
3004 4317 mt 3004 4272 L
3004  364 mt 3004  408 L
2938 4462 mt 
(50) s
3566 4317 mt 3566 4272 L
3566  364 mt 3566  408 L
3500 4462 mt 
(60) s
4128 4317 mt 4128 4272 L
4128  364 mt 4128  408 L
4062 4462 mt 
(70) s
4690 4317 mt 4690 4272 L
4690  364 mt 4690  408 L
4624 4462 mt 
(80) s
5253 4317 mt 5253 4272 L
5253  364 mt 5253  408 L
5187 4462 mt 
(90) s
 755 4317 mt  799 4317 L
5253 4317 mt 5208 4317 L
 517 4361 mt 
(-10) s
 755 3921 mt  799 3921 L
5253 3921 mt 5208 3921 L
 654 3965 mt 
(0) s
 755 3526 mt  799 3526 L
5253 3526 mt 5208 3526 L
 587 3570 mt 
(10) s
 755 3131 mt  799 3131 L
5253 3131 mt 5208 3131 L
 587 3175 mt 
(20) s
 755 2735 mt  799 2735 L
5253 2735 mt 5208 2735 L
 587 2779 mt 
(30) s
 755 2340 mt  799 2340 L
5253 2340 mt 5208 2340 L
 587 2384 mt 
(40) s
 755 1945 mt  799 1945 L
5253 1945 mt 5208 1945 L
 587 1989 mt 
(50) s
 755 1549 mt  799 1549 L
5253 1549 mt 5208 1549 L
 587 1593 mt 
(60) s
 755 1154 mt  799 1154 L
5253 1154 mt 5208 1154 L
 587 1198 mt 
(70) s
 755  759 mt  799  759 L
5253  759 mt 5208  759 L
 587  803 mt 
(80) s
 755  364 mt  799  364 L
5253  364 mt 5208  364 L
 587  408 mt 
(90) s
 755  364 mt 5253  364 L
 755 4317 mt 5253 4317 L
5253 4317 mt 5253  364 L
 755 4317 mt  755  364 L
gs 755 364 4499 3954 rc
180 w
gr

180 w
gs 451 352 4637 3700 rc
60 W
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
813 714 PD
60 W
1478 1218 PD
60 W
927 796 PD
60 W
1592 1300 PD
60 W
1057 933 PD
60 W
1723 1437 PD
60 W
1171 1015 PD
60 W
1837 1519 PD
60 W
2367 1915 PD
60 W
3032 2420 PD
60 W
2483 1996 PD
60 W
3148 2500 PD
60 W
2611 2134 PD
60 W
3276 2638 PD
60 W
2727 2214 PD
60 W
3392 2719 PD
60 W
1140 956 PD
60 W
1806 1460 PD
60 W
1254 1038 PD
60 W
1920 1542 PD
60 W
1385 1175 PD
60 W
2050 1679 PD
60 W
1499 1257 PD
60 W
2164 1761 PD
60 W
2694 2157 PD
60 W
3359 2661 PD
60 W
2810 2237 PD
60 W
3475 2741 PD
60 W
2938 2376 PD
60 W
3604 2880 PD
60 W
3055 2456 PD
60 W
3720 2960 PD
60 W
1472 1221 PD
60 W
2141 1720 PD
60 W
1586 1303 PD
60 W
2255 1803 PD
60 W
1716 1439 PD
60 W
2386 1939 PD
60 W
1831 1522 PD
60 W
2500 2022 PD
60 W
3041 2406 PD
60 W
3710 2906 PD
60 W
3157 2486 PD
60 W
3826 2986 PD
60 W
3285 2625 PD
60 W
3954 3125 PD
60 W
3401 2705 PD
60 W
4070 3205 PD
60 W
1799 1462 PD
60 W
2469 1962 PD
60 W
1914 1545 PD
60 W
2583 2044 PD
60 W
2044 1681 PD
60 W
2713 2181 PD
60 W
2158 1763 PD
60 W
2827 2263 PD
60 W
3368 2648 PD
60 W
4037 3148 PD
60 W
3484 2728 PD
60 W
4153 3228 PD
60 W
3613 2867 PD
60 W
4282 3367 PD
60 W
3729 2947 PD
60 W
4398 3447 PD
60 W
1140 956 PD
60 W
1806 1460 PD
60 W
1255 1038 PD
60 W
1920 1542 PD
60 W
1385 1175 PD
60 W
2050 1679 PD
60 W
1499 1257 PD
60 W
2164 1761 PD
60 W
2694 2157 PD
60 W
3359 2661 PD
60 W
2810 2237 PD
60 W
3475 2742 PD
60 W
2939 2376 PD
60 W
3604 2880 PD
60 W
3055 2456 PD
60 W
3720 2960 PD
60 W
1468 1197 PD
60 W
2133 1702 PD
60 W
1582 1280 PD
60 W
2247 1784 PD
60 W
1712 1416 PD
60 W
2378 1921 PD
60 W
1826 1499 PD
60 W
2492 2003 PD
60 W
3022 2399 PD
60 W
3687 2903 PD
60 W
3138 2479 PD
60 W
3803 2983 PD
60 W
3266 2618 PD
60 W
3931 3122 PD
60 W
3382 2698 PD
60 W
4047 3202 PD
60 W
1800 1462 PD
60 W
2469 1962 PD
60 W
1914 1545 PD
60 W
2583 2044 PD
60 W
2044 1681 PD
60 W
2713 2181 PD
60 W
2158 1763 PD
60 W
2827 2263 PD
60 W
3368 2648 PD
60 W
4037 3148 PD
60 W
3484 2728 PD
60 W
4153 3228 PD
60 W
3613 2867 PD
60 W
4282 3367 PD
60 W
3729 2947 PD
60 W
4398 3447 PD
60 W
2127 1704 PD
60 W
2796 2204 PD
60 W
2241 1786 PD
60 W
2910 2286 PD
60 W
2371 1923 PD
60 W
3041 2423 PD
60 W
2486 2005 PD
60 W
3155 2505 PD
60 W
3696 2890 PD
60 W
4365 3390 PD
60 W
3812 2970 PD
60 W
4481 3470 PD
60 W
3940 3109 PD
60 W
4609 3609 PD
60 W
4056 3189 PD
60 W
4725 3689 PD
gr

c8
gs 755 364 4499 3954 rc
gr

0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 168 FMSR

2588 4640 mt 
(Cloud Cost) s
 425 2856 mt  -90 rotate
(Terminal Cost) s
90 rotate
1295  259 mt 
(Tradeoff between cloud cost and terminal cost) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 738 4360 mt 
( ) s
5237  406 mt 
( ) s
gs 755 364 4499 3954 rc
24 w
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
-15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -11 -15 -12 -15 -11 
-15 -12 -15 -11 -15 -12 -15 -11 -15 -11 -15 -12 -15 -11 -15 -12 
-15 -11 -15 -12 -15 -11 -15 -11 -15 -12 -15 -11 -16 -12 -15 -11 
-15 -12 -15 -11 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -12 
-15 -11 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 
-15 -12 -15 -11 -15 -11 -15 -12 -15 -11 -16 -12 -15 -11 -15 -12 
-15 -11 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 
-15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -11 
-15 -12 -15 -11 -15 -12 -15 -11 -16 -12 -15 -11 -15 -11 -15 -12 
-15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -11 
-15 -12 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -11 -15 -12 
-15 -11 -15 -12 -15 -11 -16 -12 -15 -11 -15 -11 -15 -12 -15 -11 
-15 -12 -15 -11 -15 -12 -15 -11 -15 -11 -15 -12 -15 -11 -15 -12 
-15 -11 -15 -12 -15 -11 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 
-15 -12 -15 -11 -16 -12 -15 -11 -15 -11 -15 -12 -15 -11 -15 -12 
-15 -11 -15 -12 -15 -11 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 
-15 -12 -15 -11 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -12 
-15 -11 -16 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 
-15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -12 
-15 -11 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 
-16 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -11 
-15 -12 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -11 -15 -12 
-15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -11 -15 -12 -16 -11 
-15 -12 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -11 -15 -12 
-15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -11 -15 -12 -15 -11 
-15 -12 -15 -11 -15 -12 -15 -11 -15 -11 -15 -12 -16 -11 -15 -12 
-15 -11 -15 -12 -15 -11 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 
-15 -12 -15 -11 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -12 
-15 -11 -15 -12 -15 -11 -15 -11 -15 -12 -16 -11 -15 -12 -15 -11 
-15 -12 -15 -11 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -12 
-15 -11 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 
-15 -11 -15 -12 -15 -11 -15 -12 -16 -11 -15 -12 -15 -11 -15 -11 
-15 -12 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 
-15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -11 
-15 -12 -15 -11 -15 -12 -16 -11 -15 -12 -15 -11 -15 -11 -15 -12 
-15 -11 -15 -12 -15 -11 -15 -12 -15 -11 -15 -11 -15 -12 -15 -11 
-15 -12 -15 -11 -15 -12 -15 -11 -15 -11 -15 -12 -15 -11 -15 -12 
-15 -11 -15 -12 -16 -11 5253 4098 300 MP stroke
6 w
gr

6 w
c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
